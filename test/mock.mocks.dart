// Mocks generated by Mockito 5.4.0 from annotations
// in coodig_mobile/test/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:coodig_mobile/enum/user_status.dart' as _i6;
import 'package:coodig_mobile/provider/datetime_provider.dart' as _i8;
import 'package:coodig_mobile/repository/shared_preferences_repository.dart'
    as _i9;
import 'package:coodig_mobile/service/deeplink_service.dart' as _i3;
import 'package:coodig_mobile/service/environment_service.dart' as _i7;
import 'package:coodig_mobile/service/splash_service.dart' as _i5;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWidget_0 extends _i1.SmartFake implements _i2.Widget {
  _FakeWidget_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDateTime_1 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DeeplinkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeeplinkService extends _i1.Mock implements _i3.DeeplinkService {
  @override
  _i4.Future<String?> getLink() => (super.noSuchMethod(
        Invocation.method(
          #getLink,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  void initDeeplink() => super.noSuchMethod(
        Invocation.method(
          #initDeeplink,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Widget getScreen(String? link) => (super.noSuchMethod(
        Invocation.method(
          #getScreen,
          [link],
        ),
        returnValue: _FakeWidget_0(
          this,
          Invocation.method(
            #getScreen,
            [link],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_0(
          this,
          Invocation.method(
            #getScreen,
            [link],
          ),
        ),
      ) as _i2.Widget);
  @override
  bool verifySignedUri(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #verifySignedUri,
          [uri],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [SplashService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSplashService extends _i1.Mock implements _i5.SplashService {
  @override
  _i4.Future<_i2.Widget> getScreen(_i6.UserStatus? userStatus) =>
      (super.noSuchMethod(
        Invocation.method(
          #getScreen,
          [userStatus],
        ),
        returnValue: _i4.Future<_i2.Widget>.value(_FakeWidget_0(
          this,
          Invocation.method(
            #getScreen,
            [userStatus],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Widget>.value(_FakeWidget_0(
          this,
          Invocation.method(
            #getScreen,
            [userStatus],
          ),
        )),
      ) as _i4.Future<_i2.Widget>);
}

/// A class which mocks [EnvironmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentService extends _i1.Mock
    implements _i7.EnvironmentService {
  @override
  String getUriSecretKey() => (super.noSuchMethod(
        Invocation.method(
          #getUriSecretKey,
          [],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
}

/// A class which mocks [DateTimeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDateTimeService extends _i1.Mock implements _i8.DateTimeService {
  @override
  DateTime now() => (super.noSuchMethod(
        Invocation.method(
          #now,
          [],
        ),
        returnValue: _FakeDateTime_1(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeDateTime_1(
          this,
          Invocation.method(
            #now,
            [],
          ),
        ),
      ) as DateTime);
}

/// A class which mocks [SharedPreferencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesRepository extends _i1.Mock
    implements _i9.SharedPreferencesRepository {
  @override
  _i4.Future<void> writeBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  bool? readBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);
}
